/*
 *     Copyright (c) 2017-2019 the Lawnchair team
 *     Copyright (c)  2019 oldosfan (would)
 *     This file is part of Lawnchair Launcher.
 *
 *     Lawnchair Launcher is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Lawnchair Launcher is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Lawnchair Launcher.  If not, see <https://www.gnu.org/licenses/>.
 */

/*
 * Weatherbit.io - Swagger UI Weather API documentation
 * This is the documentation for the Weatherbit Weather API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 5 day forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/3hourly?city=London`&`country=UK`. See our [Weather API description page](https://www.weatherbit.io/api) for additional documentation.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.weatherbase.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * EnergyObsGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-07-23T18:38:21.490044+08:00[Asia/Shanghai]")
public class EnergyObsGroup {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("start_date")
  private Integer startDate = null;

  @SerializedName("end_date")
  private Integer endDate = null;

  @SerializedName("data")
  private List<EnergyObs> data = null;

  public EnergyObsGroup count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Count of found observations
   * @return count
  **/
  @Schema(example = "1", description = "Count of found observations")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public EnergyObsGroup startDate(Integer startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start Date
   * @return startDate
  **/
  @Schema(description = "Start Date")
  public Integer getStartDate() {
    return startDate;
  }

  public void setStartDate(Integer startDate) {
    this.startDate = startDate;
  }

  public EnergyObsGroup endDate(Integer endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End Date
   * @return endDate
  **/
  @Schema(description = "End Date")
  public Integer getEndDate() {
    return endDate;
  }

  public void setEndDate(Integer endDate) {
    this.endDate = endDate;
  }

  public EnergyObsGroup data(List<EnergyObs> data) {
    this.data = data;
    return this;
  }

  public EnergyObsGroup addDataItem(EnergyObs dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<EnergyObs>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public List<EnergyObs> getData() {
    return data;
  }

  public void setData(List<EnergyObs> data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnergyObsGroup energyObsGroup = (EnergyObsGroup) o;
    return Objects.equals(this.count, energyObsGroup.count) &&
        Objects.equals(this.startDate, energyObsGroup.startDate) &&
        Objects.equals(this.endDate, energyObsGroup.endDate) &&
        Objects.equals(this.data, energyObsGroup.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, startDate, endDate, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnergyObsGroup {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
