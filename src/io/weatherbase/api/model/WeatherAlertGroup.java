/*
 *     Copyright (c) 2017-2019 the Lawnchair team
 *     Copyright (c)  2019 oldosfan (would)
 *     This file is part of Lawnchair Launcher.
 *
 *     Lawnchair Launcher is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Lawnchair Launcher is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Lawnchair Launcher.  If not, see <https://www.gnu.org/licenses/>.
 */

/*
 * Weatherbit.io - Swagger UI Weather API documentation
 * This is the documentation for the Weatherbit Weather API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 5 day forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/3hourly?city=London`&`country=UK`. See our [Weather API description page](https://www.weatherbit.io/api) for additional documentation.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.weatherbase.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * WeatherAlertGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-07-23T18:38:21.490044+08:00[Asia/Shanghai]")
public class WeatherAlertGroup {
  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("severity")
  private String severity = null;

  @SerializedName("effective_utc")
  private String effectiveUtc = null;

  @SerializedName("effective_local")
  private String effectiveLocal = null;

  @SerializedName("expires_utc")
  private String expiresUtc = null;

  @SerializedName("expires_local")
  private String expiresLocal = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("alerts")
  private List<String> alerts = null;

  public WeatherAlertGroup title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Brief description of weather alert
   * @return title
  **/
  @Schema(example = "Flood Warning issued February 8 at 8:51PM CST expiring February 12 at 8:24AM CST by NWS St Louis MO", description = "Brief description of weather alert")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public WeatherAlertGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Full description of weather alert
   * @return description
  **/
  @Schema(example = "Mississippi River at Chester  .This Flood Warning is a result of 1-2 inches of rainfall across the basin earlier this week... The Flood Warning continues for the Mississippi River at Chester * until Tuesday morning. * At  8:30 PM Friday the stage was 26.8 feet. * Flood stage is 27.0 feet. * Minor flooding is forecast. * The river is forecast to rise above flood stage by tonight and to crest near 29.0 feet by Saturday evening. The river is forecast to fall below flood stage by Monday morning. * Impact:  At 28.0 feet...Unleveed islands near Chester and the prison farm floods. * Impact:  At 27.0 feet...Flood Stage.  Unprotected farmland on right bank begins to flood.", description = "Full description of weather alert")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WeatherAlertGroup severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Severity of weather. (Advisory | Watch | Warning)
   * @return severity
  **/
  @Schema(example = "Warning", description = "Severity of weather. (Advisory | Watch | Warning)")
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }

  public WeatherAlertGroup effectiveUtc(String effectiveUtc) {
    this.effectiveUtc = effectiveUtc;
    return this;
  }

   /**
   * Issued time UTC
   * @return effectiveUtc
  **/
  @Schema(example = "2019-02-09T02:51:00", description = "Issued time UTC")
  public String getEffectiveUtc() {
    return effectiveUtc;
  }

  public void setEffectiveUtc(String effectiveUtc) {
    this.effectiveUtc = effectiveUtc;
  }

  public WeatherAlertGroup effectiveLocal(String effectiveLocal) {
    this.effectiveLocal = effectiveLocal;
    return this;
  }

   /**
   * Issued time local
   * @return effectiveLocal
  **/
  @Schema(example = "2019-02-08T21:51:00", description = "Issued time local")
  public String getEffectiveLocal() {
    return effectiveLocal;
  }

  public void setEffectiveLocal(String effectiveLocal) {
    this.effectiveLocal = effectiveLocal;
  }

  public WeatherAlertGroup expiresUtc(String expiresUtc) {
    this.expiresUtc = expiresUtc;
    return this;
  }

   /**
   * Expiration time UTC
   * @return expiresUtc
  **/
  @Schema(example = "2019-02-10T02:51:00", description = "Expiration time UTC")
  public String getExpiresUtc() {
    return expiresUtc;
  }

  public void setExpiresUtc(String expiresUtc) {
    this.expiresUtc = expiresUtc;
  }

  public WeatherAlertGroup expiresLocal(String expiresLocal) {
    this.expiresLocal = expiresLocal;
    return this;
  }

   /**
   * Expiration time local
   * @return expiresLocal
  **/
  @Schema(example = "2019-02-09T21:51:00", description = "Expiration time local")
  public String getExpiresLocal() {
    return expiresLocal;
  }

  public void setExpiresLocal(String expiresLocal) {
    this.expiresLocal = expiresLocal;
  }

  public WeatherAlertGroup uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * URI to weather alert
   * @return uri
  **/
  @Schema(example = "https://api.weather.gov/alerts/NWS-IDP-PROD-3361975-2942026", description = "URI to weather alert")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public WeatherAlertGroup alerts(List<String> alerts) {
    this.alerts = alerts;
    return this;
  }

  public WeatherAlertGroup addAlertsItem(String alertsItem) {
    if (this.alerts == null) {
      this.alerts = new ArrayList<String>();
    }
    this.alerts.add(alertsItem);
    return this;
  }

   /**
   * Get alerts
   * @return alerts
  **/
  @Schema(description = "")
  public List<String> getAlerts() {
    return alerts;
  }

  public void setAlerts(List<String> alerts) {
    this.alerts = alerts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeatherAlertGroup weatherAlertGroup = (WeatherAlertGroup) o;
    return Objects.equals(this.title, weatherAlertGroup.title) &&
        Objects.equals(this.description, weatherAlertGroup.description) &&
        Objects.equals(this.severity, weatherAlertGroup.severity) &&
        Objects.equals(this.effectiveUtc, weatherAlertGroup.effectiveUtc) &&
        Objects.equals(this.effectiveLocal, weatherAlertGroup.effectiveLocal) &&
        Objects.equals(this.expiresUtc, weatherAlertGroup.expiresUtc) &&
        Objects.equals(this.expiresLocal, weatherAlertGroup.expiresLocal) &&
        Objects.equals(this.uri, weatherAlertGroup.uri) &&
        Objects.equals(this.alerts, weatherAlertGroup.alerts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, severity, effectiveUtc, effectiveLocal, expiresUtc, expiresLocal, uri, alerts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeatherAlertGroup {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    effectiveUtc: ").append(toIndentedString(effectiveUtc)).append("\n");
    sb.append("    effectiveLocal: ").append(toIndentedString(effectiveLocal)).append("\n");
    sb.append("    expiresUtc: ").append(toIndentedString(expiresUtc)).append("\n");
    sb.append("    expiresLocal: ").append(toIndentedString(expiresLocal)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
